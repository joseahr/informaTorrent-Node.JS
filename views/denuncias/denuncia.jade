extends ../base/map_layout
block meta
	meta(property='og:title' content='#{denuncia.titulo}')
	meta(property='og:description' content='#{desc}')
	meta(property='og:image' content='http://3.bp.blogspot.com/-MGedRBgtcQY/VWZTWWKEfGI/AAAAAAAAABQ/um8W-TDSTnw/s1600/www.BancodeImagenesGratuitas.com-Fantasticas-20.jpg')
block link
	link(rel="stylesheet" href="/javascripts/plugins/share/share-button.css")
block content
	div(style="position : absolute; bottom : 2em; left : 5.5em; right : 5.5em; z-index : 1; text-align : center;")
		share-button.share-button
block script
	// TinyMCE Editor
	script(src="//cdn.tinymce.com/4/tinymce.min.js")
	script(src='/javascripts/plugins/ol3-ext/style/photostyle.js')
	script(src="/javascripts/plugins/share/share-button.js")
	script.
		//alert('!{denuncia.descripcion}');

		var denuncia = JSON.parse('!{JSON.stringify(denuncia)}');

		window.document.title += ' - Denuncia - ' + denuncia.titulo;

		var titulo = denuncia.titulo;
		var url = window.location.href;
		var descripcion = $(decodeURIComponent(denuncia.descripcion.replace(/%0A/g, ''))).text().substr(0,20) + '...';
		var imagen = denuncia.imagenes ? denuncia.imagenes[0] : getGeoserverMiniatura(denuncia, 500);

		var share = new ShareButton('.share-button', {
			url : url,
			title: titulo,
			description:  descripcion, 
			image: imagen,
			ui: {
				buttonText:  'Compartir'
			}
		});

		var user;
		if('#{user}' == ''){
			user = undefined;
		} else {
			user = JSON.parse('!{JSON.stringify(user)}');
		}

		console.log(user);
		
		var json = JSON.parse('!{JSON.stringify(denuncia.geometria)}'); // geometría del servidor
		var type = json.type;

		var feature;

		if(type == 'Point'){
			feature = new ol.Feature({
				  geometry: new ol.geom.Point(json.coordinates),
				  name: 'Denuncia - Punto'
			});
		}
		else if(type == 'LineString'){
			feature = new ol.Feature({
				geometry: new ol.geom.LineString(json.coordinates),
				name: 'Denuncia - Polígono'
			});
		}
		else if(type == 'Polygon'){
			feature = new ol.Feature({
				geometry: new ol.geom.Polygon(json.coordinates),
				name: 'Denuncia - Polígono'
			});
		}

		var notificacion;
		if('!{notificacion}' != ''){
			parseNoti(JSON.parse('!{JSON.stringify(notificacion)}'));
		}
		console.log(notificacion);
		console.log(feature);

		vector.getSource().addFeature(feature);

		var geom = feature.getGeometry().getExtent();
		var size = map.getSize();

		map.getView().fit(geom,size);
		// solo podemos acceder a ella desde este tipo de scripts que tienen un punto al final
		map.addControl(new app.InfoDenuncia({},denuncia));
		map.addControl(new app.ImagenesDenuncia({},denuncia));
		map.addControl(new app.ComentariosDenuncia({}, denuncia, user));
		map.addControl(new app.LikeDenuncia());

		function parseNoti(noti){
			console.log(noti.tipo);
			if(noti.tipo == 'DENUNCIA_CERCA'){
				var posicion = noti.datos.location;
				var vector_ = new ol.layer.Vector({
					displayInLayerSwitcher: false,
					source: new ol.source.Vector({
						format: new ol.format.GeoJSON()
				    }),
				    style : styleMarkers
				});
				var feature_pos = new ol.Feature({
					geometry: new ol.geom.Point(posicion.coordinates),
					name: 'Ubicación',
				});
				feature_pos.attributes = {};
				feature_pos.attributes.marker_type = 'posicion';

				vector_.getSource().addFeature(feature_pos);

				var denuncia_centro = ol.extent.getCenter(feature.getGeometry().getExtent());

				var coo = []; coo.push(denuncia_centro); coo.push(posicion.coordinates);
				var feature_lin = new ol.Feature({
					geometry: new ol.geom.LineString(coo),
					name: 'Linea',
					attributes : {marker_type : 'posicion_linea'}
				});
				feature_lin.attributes = {};
				feature_lin.attributes.marker_type = 'posicion_linea';

				vector_.getSource().addFeature(feature_lin);

				map.addLayer(vector_);
				map.addLayer(vector);

				feature_pos.setStyle(
					new ol.style.Style({
						image: new ol.style.Photo ({
							src: noti.profile_to.picture,
							radius: 12,
							crop: true,
							kind: 'anchored',
							shadow: 5,
							onload: function() { vector_.changed(); },
							stroke: new ol.style.Stroke(
							{	width: 2,
								color: '#fff'
							})
						})
					})
				);

			}
			else if(noti.tipo == 'COMENTARIO_DENUNCIA'){
				console.log('comentario', noti);
				$(function(){
					$('.comentarios_denuncia').find('button').click();
					var selector = '#' + noti.datos.id_comentario;
					setTimeout(function(){
						$(selector).get(0).scrollIntoView();
						$(selector).css('background-color', '#ffbb00');
						setTimeout(function(){
							$(selector).css('background-color', '#fff');
						},1000);
					}, 1000);
				});
			}
			else if(noti.tipo == 'REPLICA'){
				console.log('replica');
				$(function(){
					$('.comentarios_denuncia').find('button').click();
					var selector = '#' + noti.datos.id_replica;
					setTimeout(function(){
						$(selector).get(0).scrollIntoView();
						$(selector).css('background-color', '#ffbb00');
						setTimeout(function(){
							$(selector).css('background-color', '#fff');
						},1000);
					}, 1000);
				});			
			}
		};